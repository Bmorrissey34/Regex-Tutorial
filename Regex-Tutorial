# Title (replace with your title)

Introductory paragraph (replace this with your text)

## Summary

Briefly summarize the regex you will be describing and what you will explain. Include a code snippet of the regex. Replace this text with your summary.

Grabbing HTML Tags -- <([A-Z][A-Z0-9]*)\b[^>]*>(.*?)</\1>

This will match the opening and closing pair of any HTML tag. Be sure to turn off case sensitivity. The key in this solution is the use of the backreference \1 in the regex. Anything between the tags is captured into the second backreference. This solution will also not match tags nested in themselves.

## Table of Contents

- [Anchors](#anchors)
- [Quantifiers](#quantifiers)
- [Grouping Constructs](#grouping-constructs)
- [Bracket Expressions](#bracket-expressions)
- [Character Classes](#character-classes)
- [The OR Operator](#the-or-operator)
- [Flags](#flags)
- [Character Escapes](#character-escapes)

## Regex Components

### Anchors

-In regex, the anchors have zero width. They are not used for matching characters. Rather they match a position i.e. before, after, or between characters

### Quantifiers

-Indicate numbers of characters or expressions to match

### Grouping Constructs

-Match a subexpression that is repeated in the input string.

-Apply a quantifier to a subexpression that has multiple regular expression language elements. For more information about quantifiers, see Quantifiers.

-Include a subexpression in the string that is returned by the Regex.Replace and Match.Result methods.

-Retrieve individual subexpressions from the Match.Groups property and process them separately from the matched text as a whole.

### Bracket Expressions

-The main purpose of bracket expressions is that they adapt to the user’s or application’s locale. 

-A locale is a collection of rules and settings that describe language and cultural conventions, like sort order, date format, etc. The POSIX standard defines these locales.

### Character Classes

-With a “character class”, also called “character set”, you can tell the regex engine to match only one out of several characters.

-Simply place the characters you want to match between square brackets. If you want to match an a or an e, use [ae]. You could use this in gr[ae]y to match either gray or grey. Very useful if you do not know whether the document you are searching through is written in American or British English.

### The OR Operator

-You can use the | operator (logical OR) to match characters or expression of either the left or right of the | operator. 

-For example the (t|T) will match either t or T from the input string.

### Flags

-Flags, in a regular expression, are tokens that modify its behavior of searching

### Character Escapes

-As we’ve seen, a backslash \ is used to denote character classes, e.g. \d. So it’s a special character in regexps (just like in regular strings).

-To use a special character as a regular one, prepend it with a backslash: \..

## Author

Hey my names Brendan and i am currently a student in a coding bootcamp. When completed i plan to persue a job as a full stack developer!

check out my GitHub: http://www.github.com/bmorrissey34